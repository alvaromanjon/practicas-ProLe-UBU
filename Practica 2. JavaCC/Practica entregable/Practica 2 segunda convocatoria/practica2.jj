PARSER_BEGIN(MaqPilaAbstrTrad)

public class MaqPilaAbstrTrad {
   public static void main(String[] args) {
      MaqPilaAbstrTrad parser;
      try {
         if ( args.length < 1 ) {
            System.err.println("input?");
            parser = new MaqPilaAbstrTrad(System.in);
         } else {
            parser = new MaqPilaAbstrTrad(new java.io.FileReader(args[0]));
         }
         parser.S();
         System.out.println("Syntax is okay");
      } catch (java.io.IOException e) {
         System.out.println("Problem opening file: "+e.getMessage());
      } catch (TokenMgrError e) {
         System.out.println("TokenManager failed: " + e.getMessage());
      } catch (ParseException e) {
         System.out.println("Syntax check failed: " + e.getMessage());
      }
   }
}

PARSER_END(MaqPilaAbstrTrad)

SKIP: { " " | "\t" | "\n" | "\r" }

TOKEN : {
    < #DIGIT : ["0"-"9"] >
    | < #LETTER : ["a"-"z","A"-"Z"] >
    | < REPEAT : "REPEAT" >
    | < UNTIL : "UNTIL" >
    | < IF : "IF" >
    | < THEN : "THEN" >
    | < ENDIF : "ENDIF" >
    | < SWITCH : "SWITCH" >
    | < ENDSWITCH : "ENDSWITCH" >
    | < ELSE : "ELSE" >
    | < CASE : "CASE" >
    | < RANGE : "RANGE" >
    | < PRINT : "PRINT" >
    | < ID : <LETTER> (<LETTER> | <NUM>)* >
    | < NUM : (<DIGIT>)+ >
    | < EQUAL : "=" >
    | <PLUS: "+" >
    | <MINUS: "-" >
    | <MULTIPLY: "*" >
    | <DIVIDE: "/" >
    // Mirar si hace falta poner par√©ntesis o no
}

