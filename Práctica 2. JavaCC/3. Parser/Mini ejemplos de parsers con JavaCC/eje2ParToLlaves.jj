/*
 * Parser que traduce una secuencia de par√©ntesis equilibrados
 * con identificadores, en una secuencia de llaves equilibradas
 * con indetificadores.
 */
PARSER_BEGIN (ParToLlaves)

public class ParToLlaves {
    public static void main (String[] args) throws Exception {
        ParToLlaves parser = new ParToLlaves (System.in);
        System.err.println("\ninput? ");
        System.out.println (parser.parse());
    }
}

PARSER_END (ParToLlaves)

/*
 * The terminals
 */

SKIP : { "\n" | " " }

TOKEN : {
  <OPEN: "(">
| <CLOSE: ")">
| <PERIOD: ".">
| < ID: (["a"-"z","A"-"Z"])+ >
}

/*
 * The nonterminals
 */

String parse () : 
{
  String result;
} 
{
  result = balanced () 
  <PERIOD>
  { return result + ";"; }
}

String balanced () : 
{
  StringBuffer result = new StringBuffer ();
  String tmp;
  Token tk;
} 
{
  (
    <OPEN> { result = result.append ("{"); }  
    ( tk=<ID> { result = result.append (tk.image+" "); }
    )+
    tmp = balanced () { result = result.append (tmp); }
    <CLOSE>  { result = result.append ("}"); }
  )*
  { return result.toString (); }
}
