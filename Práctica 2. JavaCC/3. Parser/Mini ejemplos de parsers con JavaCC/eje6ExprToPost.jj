/*
 * Parser para traducir expresiones de notación infija a notación postfija.
 */
PARSER_BEGIN(ExprToPost)

public class ExprToPost{
  public static void main(String args[]) throws ParseException {
    ExprToPost parser = new ExprToPost(System.in);
    System.err.println("\ninput? ");
    parser.ExpressionList();
  }
}

PARSER_END(ExprToPost)

SKIP : { " " | "\t" | "\n" | "\r" }
TOKEN : { < NUM: ( ["0"-"9"] )+ > }

void ExpressionList() :
{
  String res;
}
{
  ( res=Expression() ";" { System.out.println("= "+res); }
  )*
  <EOF>
}

String Expression() :
{
  String res, val;
}
{
  res=Term()
  (   "+" val=Term()  { res=res+" "+val+" +"; }
    | "-" val=Term()  { res=res+" "+val+" -"; }
  )*
  { return res; }
}

String Term() :
{
  String res, val;
}
{
  res=Factor()
  ( "*" val=Factor() { res=res+" "+val+" *"; }
  )*
  { return res; }
}

String Factor() :
{
  Token tk;
  String res;
}
{
 (   tk=<NUM> { res=tk.image; }
   | "(" res=Expression() ")"
   | "-" res=Term() {res=res+" "+" u-";} // menos unario
 ) 
 { return res; }
}
